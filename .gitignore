postgresdb

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.DS_Store
# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# POSTGRES_ENGINE=django.db.backends.postgresql
# POSTGRES_NAME=postgresdb
# POSTGRES_USER=admin
# POSTGRES_PASSWORD=12345
# POSTGRES_HOST=postgres
# POSTGRES_PORT=5432

# REDIS_HOST=redisdb
# REDIS_PORT=6379

# SECRET_KEY=django-insecure--*a6k6b+d52==cv+mx4w#v5v*d92*@5t7ijsdo3bfw&zojuvi0

# EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST="smtp.gmail.com"
# EMAIL_USE_TLS=True
# EMAIL_PORT=587
# EMAIL_HOST_USER='rasmusayevhad@gmail.com'
# EMAIL_HOST_PASSWORD='dyjbxkltynicpkzy'

# SOCIAL_AUTH_FACEBOOK_KEY=1206709190106021
# SOCIAL_AUTH_FACEBOOK_SECRET="3c7d611e9421907b43ea3c4a9b80418a"
# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY='598291091795-o86o5g8idjhs7j2ohv6ctmfek9kh46s3.apps.googleusercontent.com'
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET='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'

# DEBUG=False

# python manage.py dumpdata --all > ./mydump.json
# python manage.py loaddata ./mydump.json
# docker cp containerId:/sourceFilePath/someFile.txt C:/localMachineDestinationFolder

